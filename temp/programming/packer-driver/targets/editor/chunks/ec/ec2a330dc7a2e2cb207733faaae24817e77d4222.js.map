{"version":3,"sources":["file:///C:/Users/user/StickHero/assets/scripts/Game/GameLogic.ts"],"names":["_decorator","Component","UITransform","Entities","ccclass","property","GameLogic","start","update","deltaTime","isStickOnNextColumn","startColumn","nextColumn","stick","startTransform","getComponent","nextTransform","stickTransform","console","log","startPos","position","nextPos","startRightX","x","width","stickLength","height","scale","y","stickEndX","nextLeftX","nextRightX","onStickDropComplete","allEntities","entities","getEntities","isSuccess","handleDropResult"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAoCC,MAAAA,W,OAAAA,W;;AAChDC,MAAAA,Q,iBAAAA,Q;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;2BAGjBM,S,WADZF,OAAO,CAAC,WAAD,C,UAGHC,QAAQ;AAAA;AAAA,+B,2BAHb,MACaC,SADb,SAC+BL,SAD/B,CACyC;AAAA;AAAA;;AAAA;AAAA;;AAKrCM,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEDC,QAAAA,mBAAmB,CAACC,WAAD,EAAoBC,UAApB,EAAsCC,KAAtC,EAA4D;AAC3E,gBAAMC,cAAc,GAAGH,WAAW,CAACI,YAAZ,CAAyBb,WAAzB,CAAvB;AACA,gBAAMc,aAAa,GAAGJ,UAAU,CAACG,YAAX,CAAwBb,WAAxB,CAAtB;AACA,gBAAMe,cAAc,GAAGJ,KAAK,CAACE,YAAN,CAAmBb,WAAnB,CAAvB;;AAEA,cAAI,CAACY,cAAD,IAAmB,CAACE,aAApB,IAAqC,CAACC,cAA1C,EAA0D;AACtDC,YAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACA,mBAAO,KAAP;AACH;;AAED,gBAAMC,QAAQ,GAAGT,WAAW,CAACU,QAA7B;AACA,gBAAMC,OAAO,GAAGV,UAAU,CAACS,QAA3B;AAEA,gBAAME,WAAW,GAAGH,QAAQ,CAACI,CAAT,GAAaV,cAAc,CAACW,KAAf,GAAuB,CAAxD;AACA,gBAAMC,WAAW,GAAGT,cAAc,CAACU,MAAf,GAAwBd,KAAK,CAACe,KAAN,CAAYC,CAAxD;AAEA,gBAAMC,SAAS,GAAGP,WAAW,GAAGG,WAAhC;AAEA,gBAAMK,SAAS,GAAGT,OAAO,CAACE,CAAR,GAAYR,aAAa,CAACS,KAAd,GAAsB,CAApD;AACA,gBAAMO,UAAU,GAAGV,OAAO,CAACE,CAAR,GAAYR,aAAa,CAACS,KAAd,GAAsB,CAArD;AAEA,iBAAOK,SAAS,IAAIC,SAAb,IAA0BD,SAAS,IAAIE,UAA9C;AACH;;AAEMC,QAAAA,mBAAmB,CAACpB,KAAD,EAAc;AACpC,gBAAMqB,WAAW,GAAG,KAAKC,QAAL,CAAcC,WAAd,EAApB;AACA,gBAAMzB,WAAW,GAAGuB,WAAW,CAAC,aAAD,CAA/B;AACA,gBAAMtB,UAAU,GAAGsB,WAAW,CAAC,YAAD,CAA9B;AAEA,gBAAMG,SAAS,GAAG,KAAK3B,mBAAL,CACdC,WADc,EAEdC,UAFc,EAGdC,KAHc,CAAlB;AAMA,eAAKyB,gBAAL,CAAsBD,SAAtB;AACH;;AAEMC,QAAAA,gBAAgB,CAACD,SAAD,EAAqB;AACxC,cAAIA,SAAJ,EAAe;AACXnB,YAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH,WAFD,MAEO;AACHD,YAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH;AACJ;;AAzDoC,O","sourcesContent":["import { _decorator, Component, Node, tween, Vec2, Vec3, UITransform, RigidBody2D, RigidBodyComponent, director, instantiate, Prefab, Input, input } from 'cc';\nimport { Entities } from './Entities';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameLogic')\nexport class GameLogic extends Component {\n\n    @property(Entities)\n    entities: Entities;\n\n    start() {\n      \n    }\n\n    update(deltaTime: number) {\n      \n    }\n    \n    isStickOnNextColumn(startColumn: Node, nextColumn: Node, stick: Node): boolean {\n        const startTransform = startColumn.getComponent(UITransform);\n        const nextTransform = nextColumn.getComponent(UITransform);\n        const stickTransform = stick.getComponent(UITransform);\n        \n        if (!startTransform || !nextTransform || !stickTransform) {\n            console.log(\"Не хватает UITransform у одного из объектов!\");\n            return false;\n        }\n    \n        const startPos = startColumn.position;\n        const nextPos = nextColumn.position;\n    \n        const startRightX = startPos.x + startTransform.width / 2;\n        const stickLength = stickTransform.height * stick.scale.y;\n    \n        const stickEndX = startRightX + stickLength;\n    \n        const nextLeftX = nextPos.x - nextTransform.width / 2;\n        const nextRightX = nextPos.x + nextTransform.width / 2;\n        \n        return stickEndX >= nextLeftX && stickEndX <= nextRightX;\n    }\n\n    public onStickDropComplete(stick: Node) {\n        const allEntities = this.entities.getEntities();\n        const startColumn = allEntities['startColumn'];\n        const nextColumn = allEntities['nextColumn'];\n    \n        const isSuccess = this.isStickOnNextColumn(\n            startColumn,\n            nextColumn,\n            stick\n        );\n    \n        this.handleDropResult(isSuccess);\n    }\n\n    public handleDropResult(isSuccess: boolean) {\n        if (isSuccess) {\n            console.log('Успешное приземление палки');\n        } else {\n            console.log('Неуспешное приземление палки');\n        }\n    }\n\n}\n\n\n\n"]}