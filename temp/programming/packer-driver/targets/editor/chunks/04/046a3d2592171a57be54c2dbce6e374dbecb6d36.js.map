{"version":3,"sources":["file:///C:/Users/user/StickHero/assets/scripts/PositionHelper.ts"],"names":["PositionHelper","UITransform","calculateCanvasDimensions","canvas","transform","getComponent","width","height","bottomY","calculateStartColumnX","canvasWidth","columnWidth","calculatePlayerX","startColumnX","playerWidth","calculateNextColumnX","randomPosition","calculateStickStartPosition","startColumn","position","x","y","calculateStickEndX","startRightX","stickLength"],"mappings":";;;+EAEaA,c;;;;;;;;;AAFEC,MAAAA,W,OAAAA,W;;;;;;;;;gCAEFD,c,GAAN,MAAMA,cAAN,CAAqB;AACQ,eAAzBE,yBAAyB,CAACC,MAAD,EAAe;AAC3C,gBAAMC,SAAS,GAAGD,MAAM,CAACE,YAAP,CAAoBJ,WAApB,CAAlB;AACA,iBAAO;AACHK,YAAAA,KAAK,EAAEF,SAAS,CAACE,KADd;AAEHC,YAAAA,MAAM,EAAEH,SAAS,CAACG,MAFf;AAGHC,YAAAA,OAAO,EAAE,CAACJ,SAAS,CAACG,MAAX,GAAoB;AAH1B,WAAP;AAKH;;AAE2B,eAArBE,qBAAqB,CAACC,WAAD,EAAsBC,WAAtB,EAAmD;AAC3E,iBAAO,CAACD,WAAD,GAAe,CAAf,GAAmBC,WAAW,GAAG,CAAxC;AACH;;AAEsB,eAAhBC,gBAAgB,CAACC,YAAD,EAAuBC,WAAvB,EAAoD;AACvE,iBAAOD,YAAY,GAAGC,WAAW,GAAG,CAApC;AACH;;AAE0B,eAApBC,oBAAoB,CAACC,cAAD,EAAyBN,WAAzB,EAAsD;AAC7E,iBAAOM,cAAc,GAAGN,WAAxB;AACH;;AAEiC,eAA3BO,2BAA2B,CAACC,WAAD,EAA8C;AAC5E,gBAAMd,SAAS,GAAGc,WAAW,CAACb,YAAZ,CAAyBJ,WAAzB,CAAlB;AACA,gBAAMY,YAAY,GAAGK,WAAW,CAACC,QAAZ,CAAqBC,CAA1C;AACA,iBAAO;AACHA,YAAAA,CAAC,EAAEP,YAAY,GAAGT,SAAS,CAACE,KAAV,GAAkB,CADjC;AAEHe,YAAAA,CAAC,EAAEH,WAAW,CAACC,QAAZ,CAAqBE,CAArB,GAAyBjB,SAAS,CAACG,MAAV,GAAmB;AAF5C,WAAP;AAIH;;AAEwB,eAAlBe,kBAAkB,CAACC,WAAD,EAAsBC,WAAtB,EAAmD;AACxE,iBAAOD,WAAW,GAAGC,WAArB;AACH;;AAjCuB,O","sourcesContent":["import { Node, UITransform } from 'cc';\r\n\r\nexport class PositionHelper {\r\n    static calculateCanvasDimensions(canvas: Node) {\r\n        const transform = canvas.getComponent(UITransform)!;\r\n        return {\r\n            width: transform.width,\r\n            height: transform.height,\r\n            bottomY: -transform.height / 2\r\n        };\r\n    }\r\n\r\n    static calculateStartColumnX(canvasWidth: number, columnWidth: number): number {\r\n        return -canvasWidth / 2 + columnWidth / 2;\r\n    }\r\n\r\n    static calculatePlayerX(startColumnX: number, playerWidth: number): number {\r\n        return startColumnX + playerWidth / 4;\r\n    }\r\n\r\n    static calculateNextColumnX(randomPosition: number, canvasWidth: number): number {\r\n        return randomPosition - canvasWidth;\r\n    }\r\n\r\n    static calculateStickStartPosition(startColumn: Node): { x: number, y: number } {\r\n        const transform = startColumn.getComponent(UITransform)!;\r\n        const startColumnX = startColumn.position.x;\r\n        return {\r\n            x: startColumnX + transform.width / 2,\r\n            y: startColumn.position.y + transform.height / 2\r\n        };\r\n    }\r\n\r\n    static calculateStickEndX(startRightX: number, stickLength: number): number {\r\n        return startRightX + stickLength;\r\n    }\r\n}"]}