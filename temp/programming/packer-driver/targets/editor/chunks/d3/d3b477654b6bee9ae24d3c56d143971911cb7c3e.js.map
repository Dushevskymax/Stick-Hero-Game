{"version":3,"sources":["file:///C:/Users/user/StickHero/assets/scripts/Player/PlayerController.ts"],"names":["_decorator","Component","Node","PlayerState","GameManager","ccclass","property","PlayerController","currentState","WAITING","setState","state","handleWaiting","MOVING","handleSuccessfulMove","FALLING","handleFalling","startWalking","startFalling"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;;AACvBC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;kCAGjBO,gB,WADZF,OAAO,CAAC,kBAAD,C,UAGHC,QAAQ,CAACJ,IAAD,C,UAGRI,QAAQ;AAAA;AAAA,qC,2BANb,MACaC,gBADb,SACsCN,SADtC,CACgD;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAQpCO,YARoC,GAQR;AAAA;AAAA,0CAAYC,OARJ;AAAA;;AAUrCC,QAAAA,QAAQ,CAACC,KAAD,EAA2B;AACtC,eAAKH,YAAL,GAAoBG,KAApB;;AAEA,kBAAOA,KAAP;AACI,iBAAK;AAAA;AAAA,4CAAYF,OAAjB;AAA0B,mBAAKG,aAAL;AAC1B;;AACA,iBAAK;AAAA;AAAA,4CAAYC,MAAjB;AAAyB,mBAAKC,oBAAL;AACzB;;AACA,iBAAK;AAAA;AAAA,4CAAYC,OAAjB;AAA0B,mBAAKC,aAAL;AAC1B;AANJ;AAQH;;AAEMC,QAAAA,YAAY,GAAS;AACxB,eAAKP,QAAL,CAAc;AAAA;AAAA,0CAAYG,MAA1B;AACH;;AAEMK,QAAAA,YAAY,GAAS;AACxB,eAAKR,QAAL,CAAc;AAAA;AAAA,0CAAYK,OAA1B;AACH;;AAEOH,QAAAA,aAAa,GAAS,CAE7B;;AAEOE,QAAAA,oBAAoB,GAAG,CAE9B;;AAEOE,QAAAA,aAAa,GAAG,CAEvB;;AAzC2C,O","sourcesContent":["import { _decorator, Component, Node, Vec3, tween, UITransform } from 'cc';\nimport { PlayerState } from './PlayerState';\nimport { GameManager } from '../Game/GameManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('PlayerController')\nexport class PlayerController extends Component {\n\n    @property(Node)\n    player: Node;  \n\n    @property(GameManager)\n    gameLogic: GameManager;\n\n    private currentState: PlayerState = PlayerState.WAITING; \n\n    public setState(state: PlayerState): void {\n        this.currentState = state;\n\n        switch(state) {\n            case PlayerState.WAITING: this.handleWaiting(); \n            break;\n            case PlayerState.MOVING: this.handleSuccessfulMove();\n            break;\n            case PlayerState.FALLING: this.handleFalling();\n            break;\n        }\n    }\n\n    public startWalking(): void {\n        this.setState(PlayerState.MOVING);  \n    }\n\n    public startFalling(): void {\n        this.setState(PlayerState.FALLING); \n    }\n\n    private handleWaiting(): void { \n\n    }\n\n    private handleSuccessfulMove() {\n\n    }\n\n    private handleFalling() { \n\n    }\n\n}"]}