{"version":3,"sources":["file:///C:/Users/user/StickHero/assets/scripts/ScreenManager.ts"],"names":["ScreenManager","Logger","constructor","startScreen","playScreen","gameOverScreen","currentScoreLabel","scoreLabel","showStartScreen","setScreenState","updateCurrentScore","showPlayScreen","showGameOverScreen","score","string","console","log","warnNull","updateScoreDisplay","start","play","gameOver","active","method"],"mappings":";;;uFAGaA,a;;;;;;;;;;;;;;;;AAFJC,MAAAA,M,iBAAAA,M;;;;;;;;;+BAEID,a,GAAN,MAAMA,aAAN,CAAoB;AAOvBE,QAAAA,WAAW,CACPC,WADO,EAEPC,UAFO,EAGPC,cAHO,EAIPC,iBAJO,EAKPC,UALO,EAMT;AAAA,eAZMJ,WAYN;AAAA,eAXMC,UAWN;AAAA,eAVMC,cAUN;AAAA,eATMC,iBASN;AAAA,eARMC,UAQN;AACE,eAAKJ,WAAL,GAAmBA,WAAnB;AACA,eAAKC,UAAL,GAAkBA,UAAlB;AACA,eAAKC,cAAL,GAAsBA,cAAtB;AACA,eAAKC,iBAAL,GAAyBA,iBAAzB;AACA,eAAKC,UAAL,GAAkBA,UAAlB;AACH;;AAEDC,QAAAA,eAAe,GAAS;AACpB,eAAKC,cAAL,CAAoB,IAApB,EAA0B,KAA1B,EAAiC,KAAjC;AACA,eAAKC,kBAAL,CAAwB,CAAxB,EAA2B,iBAA3B;AACH;;AAEDC,QAAAA,cAAc,GAAS;AACnB,eAAKF,cAAL,CAAoB,KAApB,EAA2B,IAA3B,EAAiC,KAAjC;AACA,eAAKC,kBAAL,CAAwB,CAAxB,EAA2B,gBAA3B;AACH;;AAEDE,QAAAA,kBAAkB,CAACC,KAAD,EAAsB;AACpC,eAAKJ,cAAL,CAAoB,KAApB,EAA2B,KAA3B,EAAkC,IAAlC;;AACA,cAAI,KAAKF,UAAT,EAAqB;AACjB,iBAAKA,UAAL,CAAgBO,MAAhB,eAAmCD,KAAnC;AACAE,YAAAA,OAAO,CAACC,GAAR,qDAA8DH,KAA9D;AACH,WAHD,MAGO;AACH;AAAA;AAAA,kCAAOI,QAAP,CAAgB,eAAhB,EAAiC,YAAjC,EAA+C,oBAA/C;AACH;AACJ;;AAEDC,QAAAA,kBAAkB,CAACL,KAAD,EAAsB;AACpC,eAAKH,kBAAL,CAAwBG,KAAxB,EAA+B,oBAA/B;AACH;;AAEOJ,QAAAA,cAAc,CAACU,KAAD,EAAiBC,IAAjB,EAAgCC,QAAhC,EAAyD;AAC3E,eAAKlB,WAAL,CAAiBmB,MAAjB,GAA0BH,KAA1B;AACA,eAAKf,UAAL,CAAgBkB,MAAhB,GAAyBF,IAAzB;AACA,eAAKf,cAAL,CAAoBiB,MAApB,GAA6BD,QAA7B;;AACA,cAAI,KAAKhB,cAAL,CAAoBiB,MAAxB,EAAgC;AAC5BP,YAAAA,OAAO,CAACC,GAAR,8DAAuE,KAAKX,cAAL,CAAoBiB,MAA3F;AACH;AACJ;;AAEOZ,QAAAA,kBAAkB,CAACG,KAAD,EAAgBU,MAAhB,EAAsC;AAC5D,cAAI,KAAKjB,iBAAT,EAA4B;AACxB,iBAAKA,iBAAL,CAAuBQ,MAAvB,QAAmCD,KAAnC;AACAE,YAAAA,OAAO,CAACC,GAAR,4CAAoDO,MAAM,KAAK,oBAAX,GAAkC,SAAlC,GAA8C,OAAlG,cAAiHV,KAAjH;AACH,WAHD,MAGO;AACH;AAAA;AAAA,kCAAOI,QAAP,CAAgB,eAAhB,EAAiC,mBAAjC,EAAsDM,MAAtD;AACH;AACJ;;AA7DsB,O","sourcesContent":["import { Node, Label } from 'cc';\r\nimport { Logger } from './Logger';\r\n\r\nexport class ScreenManager {\r\n    private startScreen: Node;\r\n    private playScreen: Node;\r\n    private gameOverScreen: Node;\r\n    private currentScoreLabel: Label | null;\r\n    private scoreLabel: Label | null;\r\n\r\n    constructor(\r\n        startScreen: Node,\r\n        playScreen: Node,\r\n        gameOverScreen: Node,\r\n        currentScoreLabel: Label | null,\r\n        scoreLabel: Label | null\r\n    ) {\r\n        this.startScreen = startScreen;\r\n        this.playScreen = playScreen;\r\n        this.gameOverScreen = gameOverScreen;\r\n        this.currentScoreLabel = currentScoreLabel;\r\n        this.scoreLabel = scoreLabel;\r\n    }\r\n\r\n    showStartScreen(): void {\r\n        this.setScreenState(true, false, false);\r\n        this.updateCurrentScore(0, \"showStartScreen\");\r\n    }\r\n\r\n    showPlayScreen(): void {\r\n        this.setScreenState(false, true, false);\r\n        this.updateCurrentScore(0, \"showPlayScreen\");\r\n    }\r\n\r\n    showGameOverScreen(score: number): void {\r\n        this.setScreenState(false, false, true);\r\n        if (this.scoreLabel) {\r\n            this.scoreLabel.string = `Score: ${score}`;\r\n            console.log(`ScreenManager: Game over screen showing score: ${score}`);\r\n        } else {\r\n            Logger.warnNull(\"ScreenManager\", \"scoreLabel\", \"showGameOverScreen\");\r\n        }\r\n    }\r\n\r\n    updateScoreDisplay(score: number): void {\r\n        this.updateCurrentScore(score, \"updateScoreDisplay\");\r\n    }\r\n\r\n    private setScreenState(start: boolean, play: boolean, gameOver: boolean): void {\r\n        this.startScreen.active = start;\r\n        this.playScreen.active = play;\r\n        this.gameOverScreen.active = gameOver;\r\n        if (this.gameOverScreen.active) {\r\n            console.log(`ScreenManager: Activating gameOverScreen, active state: ${this.gameOverScreen.active}`);\r\n        }\r\n    }\r\n\r\n    private updateCurrentScore(score: number, method: string): void {\r\n        if (this.currentScoreLabel) {\r\n            this.currentScoreLabel.string = `${score}`;\r\n            console.log(`ScreenManager: Current score display ${method === \"updateScoreDisplay\" ? \"updated\" : \"reset\"} to: ${score}`);\r\n        } else {\r\n            Logger.warnNull(\"ScreenManager\", \"currentScoreLabel\", method);\r\n        }\r\n    }\r\n}"]}