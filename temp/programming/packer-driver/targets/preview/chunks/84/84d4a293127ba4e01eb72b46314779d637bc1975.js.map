{"version":3,"sources":["file:///C:/Users/user/StickHero/assets/scripts/ColumnManager.ts"],"names":["ColumnManager","SceneUtils","constructor","columnWidth","columnHeight","canvasWidth","canvasBottomY","canvasSize","getCanvasSize","width","bottomY","generateNextColumn","minWidth","maxWidth","randomWidth","randomRange","minPosition","maxPosition","randomPosition","x","y","calculateInitialPositions","startColumnWidth","playerWidth","startColumnX","playerX","nextColumnX"],"mappings":";;;0CAEaA,a;;;;;;;;;;;;;;AAFJC,MAAAA,U,iBAAAA,U;;;;;;;+BAEID,a,GAAN,MAAMA,aAAN,CAAoB;AAMvBE,QAAAA,WAAW,CAACC,WAAD,EAAsBC,YAAtB,EAA4C;AAAA,eAL/CC,WAK+C,GALzB,CAKyB;AAAA,eAJ/CC,aAI+C,GAJvB,CAIuB;AAAA,eAH/CH,WAG+C,GAHzB,CAGyB;AAAA,eAF/CC,YAE+C,GAFxB,CAEwB;AACnD,cAAMG,UAAU,GAAG;AAAA;AAAA,wCAAWC,aAAX,EAAnB;AACA,eAAKH,WAAL,GAAmBE,UAAU,CAACE,KAA9B;AACA,eAAKH,aAAL,GAAqBC,UAAU,CAACG,OAAhC;AACA,eAAKP,WAAL,GAAmBA,WAAnB;AACA,eAAKC,YAAL,GAAoBA,YAApB;AACH,SAZsB,CAcvB;;;AACAO,QAAAA,kBAAkB,GAAG;AACjB,cAAMC,QAAQ,GAAG,KAAKT,WAAL,GAAmB,CAApC;AACA,cAAMU,QAAQ,GAAG,KAAKV,WAAL,GAAmB,CAApC;AACA,cAAMW,WAAW,GAAG;AAAA;AAAA,wCAAWC,WAAX,CAAuBH,QAAvB,EAAiCC,QAAjC,CAApB;AAEA,cAAMG,WAAW,GAAG,KAAKX,WAAL,GAAmB,CAAnB,GAAuB,MAAM,KAAKF,WAAtD;AACA,cAAMc,WAAW,GAAG,MAAM,KAAKZ,WAAX,GAAyBS,WAAW,GAAG,CAA3D;AACA,cAAMI,cAAc,GAAG;AAAA;AAAA,wCAAWH,WAAX,CAAuBC,WAAvB,EAAoCC,WAApC,CAAvB;AAEA,iBAAO;AACHE,YAAAA,CAAC,EAAED,cADA;AAEHE,YAAAA,CAAC,EAAE,KAAKd,aAAL,GAAqB,KAAKF,YAAL,GAAoB,CAFzC;AAGHK,YAAAA,KAAK,EAAEK;AAHJ,WAAP;AAKH,SA7BsB,CA+BvB;;;AACAO,QAAAA,yBAAyB,CAACC,gBAAD,EAA2BC,WAA3B,EAAgD;AACrE,cAAMC,YAAY,GAAG,CAAC,KAAKnB,WAAN,GAAoB,CAApB,GAAwBiB,gBAAgB,GAAG,CAAhE;AACA,cAAMG,OAAO,GAAGD,YAAY,GAAGD,WAAW,GAAG,CAA7C;AACA,cAAMG,WAAW,GAAG,KAAKf,kBAAL,GAA0BQ,CAA1B,GAA8B,KAAKd,WAAvD;AAEA,iBAAO;AAAEmB,YAAAA,YAAF;AAAgBC,YAAAA,OAAhB;AAAyBC,YAAAA;AAAzB,WAAP;AACH;;AAtCsB,O","sourcesContent":["import { SceneUtils } from './SceneUtills';\r\n\r\nexport class ColumnManager {\r\n    private canvasWidth: number = 0;\r\n    private canvasBottomY: number = 0;\r\n    private columnWidth: number = 0;\r\n    private columnHeight: number = 0;\r\n\r\n    constructor(columnWidth: number, columnHeight: number) {\r\n        const canvasSize = SceneUtils.getCanvasSize();\r\n        this.canvasWidth = canvasSize.width;\r\n        this.canvasBottomY = canvasSize.bottomY;\r\n        this.columnWidth = columnWidth;\r\n        this.columnHeight = columnHeight;\r\n    }\r\n\r\n    // Сгенерировать данные для следующего столба\r\n    generateNextColumn() {\r\n        const minWidth = this.columnWidth / 3;\r\n        const maxWidth = this.columnWidth * 2;\r\n        const randomWidth = SceneUtils.randomRange(minWidth, maxWidth);\r\n\r\n        const minPosition = this.canvasWidth / 2 + 1.5 * this.columnWidth;\r\n        const maxPosition = 1.5 * this.canvasWidth - randomWidth / 2;\r\n        const randomPosition = SceneUtils.randomRange(minPosition, maxPosition);\r\n\r\n        return {\r\n            x: randomPosition,\r\n            y: this.canvasBottomY + this.columnHeight / 2,\r\n            width: randomWidth\r\n        };\r\n    }\r\n\r\n    // Рассчитать начальные позиции при старте игры\r\n    calculateInitialPositions(startColumnWidth: number, playerWidth: number) {\r\n        const startColumnX = -this.canvasWidth / 2 + startColumnWidth / 2;\r\n        const playerX = startColumnX + playerWidth / 4;\r\n        const nextColumnX = this.generateNextColumn().x - this.canvasWidth;\r\n\r\n        return { startColumnX, playerX, nextColumnX };\r\n    }\r\n}"]}